{"pages":[],"posts":[{"title":"Hexo博客框架简单配置教程","text":"​ 灵机一动想要配置一个博客，但是因为懒得自己写前端，于是就找到了一个生成静态站点的框架——Hexo，它有以下优点： Hexo生成静态站点，也就是不需要后端的额外程序进行响应处理的站点，把生成的文件复制到github上什么的就可以直接渲染展示了，省去了自己搞服务器的麻烦（不过考虑到我已经有服务器了，这就无所谓啦） Hexo配置十分简单，使得使用者不需要有任何前端知识也可以管理自己的博客，只要打hexo new post/page/photo [推文的名字]就可以得到一个md文件，在里边写博客就完事了。Hexo会自动将文件转化为可以浏览的html文件。 插件比较多，可以实现比较多的功能，而且各种主题还是比较好看的。 安装HexoHexo是使用Node.js来运行的，而Hexo运行时使用了git命令，所以为了使Hexo成功运行需要安装Node.js, Hexo, git三个软件，当然这样只能在自己的电脑上预览网站，生成的静态页面如果想要上传到github.io的页面上或者自己的服务器上，前者需要使用git，后者需要你会一些和服务器交互的知识。 首先来安装Hexo及其需要的组件，进入Hexo文档第一页就有详细的安装教程https://hexo.io/zh-cn/docs/这里不再赘述。 安装好Hexo后，在一个空的文件夹内输入命令 hexo init初始化以后，文件夹内就多出来一大堆乱七八糟的文件，这时如果再输入hexo generate 或者hexo g（命令的首字母可以代替整个单词，其他命令同理），就可以看见本就乱七八糟的文件中又多了一个public文件夹，这个文件夹里就出现了我们非常熟悉的js，css，index.html等文件，没错，这就是Hexo生成的输出文件，你接下在自己的博客里看到的一切都来自这个public文件夹，而这个public文件的生成则是取决于source文件夹里的文章和全局设置（主题），接下来只要修改source文件夹里的内容和设置文件_config.yml就可以了。 预览网页只要输入命令hexo server就可以在浏览器里打开http://127.0.0.1:4000 看见自己可爱的网页啦。里面会展示一些最基础的操作，而这个网页的本身就在[你的网站目录]/source/hello-world.md这啦。结合Hexo官网的文档，接下来就是自己自由探索的空间了。 踩过的坑 hexo g报错：can not read a block mapping entry; a multiline key may not be an implicit key: yaml文件里的字符串可以加单引号，也可以不加，但是不可以加双引号，如果加双引号会破坏文件本身的结构，就会在hexo g的时候报错 更新文件时，如果修改的是除了_config.yml以外的文件的话，不需要重新启动hexo server，如果是修改了配置文件，就需要退出hexo server重新启动才可以。","link":"/2021/02/11/hexo-configuration-tutorial/"}],"tags":[{"name":"Blog","slug":"Blog","link":"/tags/Blog/"}],"categories":[]}